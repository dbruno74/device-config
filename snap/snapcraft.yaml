name: device-config
base: core20
version: '0.1'
summary: Configure some defaults on Ubuntu Core images
description: |
  This little helper snap loads a System User assertion from an hardcoded 
  http server (192.168.1.100), create a System User based on the donwloaded assertion 
  and copies a netplan.yaml in place on a freshly booted Ubuntu core image.

  Note that ou need to connect the network-setup-control and snapd-control interfaces
  from a gadget.yaml config line to make this work. Additionally, you need to ask support
  to grant interface auto-connection for snapd-control.

  To create the snap, use the following command:
  snapcraft --use-lxd

  To test system user creation only with unasserted snap, follow the steps below
  - assure that your device has access to your LAN (e.g. with console-conf)
  - create a system user assertion with the script below
    https://github.com/dbruno74/toolbox/blob/20/glue/bin/sign-system-user-assertion 
  - place it in a directory on a linux machine
  - start a web server with the command below 
    sudo python3 -m http.server <port number of your choice> --bind <ip of your linux machine> 
  - edit the scripts/create_user and fill in HTTP_SERVER_IP (ip of your linux machine), HTTP_SERVER_PORT (port number of your choice) and ASSERT_NAME (file name of the system user assertion)
  - edit snap/snapcraft.yaml and uncomment the following line:
    install-mode: disable
  - remove the file snap/hooks/configure
  - create the snap
    snapcraft --use-lxd
  - copy the snap on your device (e.g. scp device-config_0.1_arm64.snap <your device ip>:~)
  - on your device, install the unasserted snap
    snap install device-config_0.1_arm64.snap --dangerous
  - on your device, manually connect snapd-control interface
    snap connect device-config:snapd-control
  - on a different terminal, connect to your device and launch journalctl to monitor the user creation
    sudo journalctl --output=short --follow --all
  - launch the daemon
    snap start device-config
  - look at journalctl log for printouts
  Note that further http tracing can be enabled if needed adding "--trace /tmp/curllog.log" to the curl calls into the scripts/create_user script


grade: stable
confinement: strict

apps:
  device-config:
      command: create_user
      daemon: oneshot
      refresh-mode: endure
#      install-mode: disable 

plugs:
  network:
  network-setup-control:
  snapd-control:

parts:
  netplanyaml:
    source: default-netplan-config
    plugin: nil
    override-build: |
      cp netplan.yaml $SNAPCRAFT_PART_INSTALL/
  create-user:
    source: scripts
    plugin: dump
    stage-packages: [curl]
